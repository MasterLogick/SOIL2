name: night-builds

on:
  workflow_dispatch:
  schedule:
  - cron: "0 0 * * 1"

jobs:
  Linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
      with:
        repository: 'SpartanJ/SOIL2'
    - name: Install dependencies
      run: |
        sudo add-apt-repository universe
        sudo add-apt-repository multiverse
        sudo apt update
        sudo apt install gcc-12 g++-12 wget libsdl2-2.0-0 libsdl2-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 10
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 10
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
        sudo update-alternatives --set cc /usr/bin/gcc
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
        sudo update-alternatives --set c++ /usr/bin/g++
        sudo update-alternatives --config gcc
        sudo update-alternatives --config g++
        wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-linux.tar.gz
        tar xvzf premake-5.0.0-alpha15-linux.tar.gz
    - name: Build
      run: |
        ./premake5 gmake2
        cd make/linux
        make config=release_x86_64
        cd ../..
    - name: Save artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: lib/linux/
  MacOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: 'SpartanJ/SOIL2'    
    - name: Install dependencies
      run: |
        brew install wget
        brew install SDL2
        wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-macosx.tar.gz
        tar -xzf premake-5.0.0-alpha15-macosx.tar.gz
    - name: Build
      run: |
        ./premake5 gmake2
        make -C make/macosx/ -j`nproc` config=release_x86_64 
    - name: Save artifact
      uses: actions/upload-artifact@v3
      with:
        name: macosx-build
        path: lib/macosx/
  Windows:
    runs-on: windows-latest
    env:
      MSBUILD_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\
    steps:
    - uses: actions/checkout@v2
      with:
        repository: 'SpartanJ/SOIL2'
    - name: Install dependencies
      shell: powershell
      run: |
        Invoke-WebRequest -Uri "https://github.com/premake/premake-core/releases/download/v5.0.0-beta1/premake-5.0.0-beta1-windows.zip" -OutFile "premake-5.0.0-beta1-windows.zip"
        Expand-Archive -DestinationPath . -Path premake-5.0.0-beta1-windows.zip
    - name: Create project
      shell: powershell
      run: |
        ./premake5.exe --windows-vc-build vs2022
    - name: Build
      shell: cmd
      run: |
        "%MSBUILD_PATH%\MSBuild.exe" .\make\windows\SOIL2.sln -m /p:Configuration=Release 
    - name: Save artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: lib\windows\
  Publish:
    runs-on: ubuntu-latest
    needs: [Linux, Windows, MacOS]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: windows-build
        path: windows
    - uses: actions/download-artifact@v3
      with:
        name: linux-build
        path: linux
    - uses: actions/download-artifact@v3
      with:
        name: macosx-build
        path: macosx
    - name: Pack binaries
      id: pack
      run: |
        zip -r build.zip linux windows macosx
        echo date=$(date "+%Y-%m-%d") >> "$GITHUB_OUTPUT"
    - name: Tag release
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.RELEASE_KEY }}
        tag: "night-${{ steps.pack.outputs.date }}"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_KEY }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: "night-${{ steps.pack.outputs.date }}"
        release_name: Night build ${{ steps.pack.outputs.date }}
        body: |
            Built libraries for main branch
        draft: true
        prerelease: false
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build.zip
        asset_name: soil2-master-build.zip
        asset_content_type: application/zip
    - name: Publish release
      uses: StuYarrow/publish-release@v1.1.2
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_KEY }}
      with:
        id: ${{ steps.create_release.outputs.id }}
      
